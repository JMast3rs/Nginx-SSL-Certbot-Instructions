

sudo apt-get update

sudo apt-get install certbot

sudo apt install python-certbot-nginx

sudo certbot --nginx -d sub.domain.com


sudo nano /etc/nginx/snippets/ssl-sub.domain.com.conf
******************************************************************************************************************************

ssl_certificate /etc/letsencrypt/live/sub.domain.com/fullchain.pem;
ssl_certificate_key /etc/letsencrypt/live/sub.domain.com/privkey.pem;

******************************************************************************************************************************


sudo nano /etc/nginx/snippets/ssl-params.conf
******************************************************************************************************************************
# from https://cipherli.st/
# and https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html

ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
ssl_prefer_server_ciphers on;
ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
ssl_ecdh_curve secp384r1;
ssl_session_cache shared:SSL:10m;
ssl_session_tickets off;
ssl_stapling on;
ssl_stapling_verify on;
resolver 8.8.8.8 8.8.4.4 valid=300s;
resolver_timeout 5s;
# Disable preloading HSTS for now.  You can use the commented out header line that includes
# the "preload" directive if you understand the implications.
#add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
add_header X-Frame-Options DENY;
add_header X-Content-Type-Options nosniff;

ssl_dhparam /etc/ssl/certs/dhparam.pem;
******************************************************************************************************************************



sudo nano /etc/nginx/sites-available/sub.domain.com
******************************************************************************************************************************

server {

        listen 80;
        listen [::]:80

        server_name sub.domain.com;

return 301 https://$server_name$request_uri;

        location / {

                proxy_pass http://192.168.1.4;
                proxy_set_header Host $http_host;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Scheme $scheme;
                proxy_http_version 1.1;
        }
}

server {

    listen 443 ssl;
    listen [::]:443 ssl;

    include snippets/ssl-sub.domain.com.conf;
    include snippets/ssl-params.conf;

    server_name sub.domain.com;

    location /
                proxy_pass https://192.168.0.46;
                proxy_set_header Host $http_host;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Scheme $scheme;
                proxy_http_version 1.1;

        }

}


******************************************************************************************************************************
